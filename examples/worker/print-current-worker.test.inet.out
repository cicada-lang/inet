<worker>
<mod spec-count="10" rule-count="0">
@swap
@rot
@wire/connect
@wire/print-net
@wire/pair
@interact
@print-current-worker
@print-value-stack
@print-return-stack
* (sole) -- value! 
</mod>
<active-wire-list length="0">
</active-wire-list>
<return-stack length="1">
<frame>
<program>
. @print-current-worker <<< sole @print-current-worker sole @print-current-worker 
</program>
<local-free-wires>
</local-free-wires>
</frame>
</return-stack>
<value-stack length="0">
</value-stack>
</worker>

<worker>
<mod spec-count="10" rule-count="0">
@swap
@rot
@wire/connect
@wire/print-net
@wire/pair
@interact
@print-current-worker
@print-value-stack
@print-return-stack
* (sole) -- value! 
</mod>
<active-wire-list length="0">
</active-wire-list>
<return-stack length="1">
<frame>
<program>
. @print-current-worker sole @print-current-worker <<< sole @print-current-worker 
</program>
<local-free-wires>
</local-free-wires>
</frame>
</return-stack>
<value-stack length="1">
(sole₁)-value!-<>-
</value-stack>
</worker>

<worker>
<mod spec-count="10" rule-count="0">
@swap
@rot
@wire/connect
@wire/print-net
@wire/pair
@interact
@print-current-worker
@print-value-stack
@print-return-stack
* (sole) -- value! 
</mod>
<active-wire-list length="0">
</active-wire-list>
<return-stack length="0">
</return-stack>
<value-stack length="2">
(sole₁)-value!-<>-
(sole₂)-value!-<>-
</value-stack>
</worker>

